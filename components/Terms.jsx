import React from 'react';

const TechnicalTerms = () => {
  // Define technical terms directly in an object
  const terms = {
    'I2C': [
      { term: 'Serial Data (SDA)', definition: 'The line used for bidirectional data transfer between the master and slave devices in I2C communication.' },
      { term: 'Serial Clock (SCL)', definition: 'The line that provides the clock signal for synchronized data transfer between the master and slave devices in I2C communication.' },
      { term: 'Start Condition', definition: 'A unique signal sequence initiated by the master to indicate the beginning of a data transfer transaction in I2C communication.' },
      { term: 'Stop Condition', definition: 'A unique signal sequence initiated by the master to indicate the end of a data transfer transaction in I2C communication.' },
      { term: 'Acknowledge (ACK)', definition: 'A signal sent by the slave device to acknowledge the receipt of data from the master during an I2C data transfer transaction.' },
      { term: 'Bus Arbitration', definition: 'The process by which multiple devices connected to the same I2C bus compete for control of the bus to initiate data transfer.' }
    ],
    'SPI': [
      { term: 'Master In Slave Out (MISO)', definition: 'The line through which data is transmitted from the slave device to the master device in SPI communication.' },
      { term: 'Master Out Slave In (MOSI)', definition: 'The line through which data is transmitted from the master device to the slave device in SPI communication.' },
      { term: 'Serial Clock (SCK)', definition: 'The clock signal generated by the master device to synchronize data transfer between the master and slave devices in SPI communication.' },
      { term: 'Slave Select (SS)', definition: 'A signal used by the master device to select a specific slave device for communication in SPI communication.' },
      { term: 'Full-Duplex', definition: 'A mode of communication in SPI where data can be transmitted and received simultaneously between the master and slave devices.' }
    ],
    'PCI': [
      { term: 'Peripheral Component Interconnect (PCI)', definition: 'A parallel bus standard used for connecting hardware devices to a computer motherboard for data transfer and communication.' },
      { term: 'Bus Arbitration', definition: 'The process by which multiple devices connected to the PCI bus compete for control of the bus to initiate data transfer.' },
      { term: 'Plug and Play', definition: 'A feature of PCI that allows the automatic detection and configuration of hardware devices connected to the bus without the need for manual intervention.' }
    ],
    'PCI Express': [
      { term: 'Serial Lanes', definition: 'Individual bidirectional data channels used for data transfer between PCI Express devices.' },
      { term: 'Point-to-Point Connections', definition: 'A topology used in PCI Express where each device is connected directly to the root complex without the need for a shared bus.' },
      { term: 'Scalability', definition: 'The ability of PCI Express to support multiple lanes and configurations to meet varying bandwidth requirements.' }
    ],
    'CAN': [
      { term: 'Controller Area Network (CAN)', definition: 'A serial communication protocol designed for robust and reliable communication in automotive and industrial applications.' },
      { term: 'Arbitration Priority', definition: 'A mechanism used in CAN communication to determine the priority of messages transmitted by different nodes on the bus.' },
      { term: 'Error Detection and Handling', definition: 'Built-in error detection mechanisms in CAN communication to detect and handle errors such as bit errors, frame errors, and acknowledgment errors.' }
    ],
    'USB': [
      { term: 'Universal Serial Bus (USB)', definition: 'A serial bus standard used for connecting devices to computers and other peripherals for data transfer and communication.' },
      { term: 'Hot-Plugging', definition: 'The ability to connect and disconnect USB devices from a computer while the computer is running without the need for a reboot or manual configuration.' },
      { term: 'Data Transfer Modes', definition: 'Different modes of data transfer supported by USB, including bulk, isochronous, and interrupt transfer modes.' }
    ]
  };

  return (
    <div>
    <div className=' text-xl font-bold text-white flex justify-center items-center'> Terms</div>
      {Object.keys(terms).map((protocol, index) => (
        <div key={index} className=' p-7'>
          <h2 className="font-semibold mb-2 text-2xl text-gray-200">{protocol} </h2>
          <ul className="list-disc ml-6">
            {terms[protocol].map((item, index) => (
              <li key={index} className="mb-1 text-gray-300 text-2xl">
                <strong>{item.term}:</strong> {item.definition}
              </li>
            ))}
          </ul>
        </div>
      ))}
    </div>
  );
};

export default TechnicalTerms;
